
<style>
    [type="file"] {
        height: 0;
        overflow: hidden;
        width: 0;
    }
</style>
<InputFile OnChange="HandleFileInput" multiple @attributes="InputAttributes" />
<label for="file" class="btn btn-primary mb-0">Select Images</label>

@code {
    [Parameter] public EventCallback<List<UploadFileDto>> OnPreviewSelected { get; set; }
    public Dictionary<string, object> InputAttributes { get; set; } = new Dictionary<string, object>
{
        {"id","file" }
    };
    private List<UploadFileDto> PreviewFiles = new List<UploadFileDto>();
    private async Task HandleFileInput(InputFileChangeEventArgs files)
    {
        var maxAllowedFiles = 10;
        long maxFileSize = 1024 * 1024 * 15;

        foreach (var imageFile in files.GetMultipleFiles(maxAllowedFiles))
        {
            var format = Path.GetExtension(imageFile.Name);
            var resizedImageFile = await imageFile.RequestImageFileAsync(format, 1000, 1000);
            using var fileStream = resizedImageFile.OpenReadStream(maxFileSize);
            using var memoryStream = new MemoryStream();
            await fileStream.CopyToAsync(memoryStream);
            var imageDataUri = $"data:{format};base64,{Convert.ToBase64String(memoryStream.ToArray())}";

            var uploadFileDto = new UploadFileDto
            {
                ImageDataUri = imageDataUri,
                FileName = imageFile.Name,
                Image = new ImageDto
                {
                    Data = memoryStream.ToArray(),
                    FileSize = imageFile.Size,
                    FileType = format
                }
            };

            PreviewFiles.Add(uploadFileDto);
        }
        //Set first image as isFirstImage =true
        PreviewFiles[0].Image.IsFirstImage = true;
        await OnPreviewSelected.InvokeAsync(PreviewFiles);
    }

}
